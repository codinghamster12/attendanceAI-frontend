{"version":3,"sources":["containers/Login/index.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","subheading","fontWeight","fontSize","marginTop","fontFamily","button","textAlign","text","marginBottom","Login","classes","Container","maxWidth","style","Box","p","mt","bgcolor","boxShadow","borderRadius","Typography","align","variant","color","className","TextField","id","size","fullWidth","margin","inputProps","background","Button","disableElevation","href","textDecoration","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","palette","primary","main","secondary","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"kTAMMA,G,MAAYC,aAAW,SAACC,GAAD,MAAY,CAErCC,WAAW,CACPC,WAAY,IACZC,SAAU,GACVC,UAAW,GACXC,WAAY,0BAEhBC,OAAO,CACHC,UAAW,UAEhBC,KAAK,CACHC,aAAc,GACdJ,WAAY,+BA2EFK,EAlED,WACV,IAAMC,EAASb,IACjB,OACE,cAACc,EAAA,EAAD,CAAWC,SAAS,KAAKC,MAAO,CAACV,UAAU,KAA3C,SACE,eAACW,EAAA,EAAD,CACEC,EAAE,OACFC,GAAG,OACHC,QAAQ,QACRC,UAAU,KACVC,aAAa,OALf,UAUE,cAACC,EAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,QAAQC,MAAM,YAAYC,UAAWd,EAAQV,WAAhF,qCAGA,uBACA,cAACoB,EAAA,EAAD,CAAYE,QAAQ,UAAUC,MAAM,YAApC,mBAGA,uBAEA,cAACE,EAAA,EAAD,CACEC,GAAG,sBAEHJ,QAAQ,WACRK,KAAK,QACLC,WAAS,EACTC,OAAO,SACPC,WAAY,CAACjB,MAAM,CAAEkB,WAAY,WAInC,cAACX,EAAA,EAAD,CAAYE,QAAQ,UAAUC,MAAM,YAApC,sBAGA,cAACE,EAAA,EAAD,CAEEC,GAAG,sBAEHJ,QAAQ,WACRK,KAAK,QACLC,WAAS,EACTC,OAAO,SACPC,WAAY,CAACjB,MAAM,CAAEkB,WAAY,WAEnC,uBACA,uBACA,cAACC,EAAA,EAAD,CAAQV,QAAQ,YAAYC,MAAM,UAAUK,WAAS,EAACK,kBAAgB,EAACN,KAAK,QAAQH,UAAWd,EAAQL,OAAvG,mBAGA,uBACA,uBACA,uBAEA,eAACe,EAAA,EAAD,CAAYE,QAAQ,QAAQC,MAAM,YAAYF,MAAM,SAASG,UAAWd,EAAQH,KAAhF,oCACyB,sBAAMM,MAAO,CAACU,MAAO,QAArB,SAA8B,mBAAGW,KAAK,YAAYrB,MAAO,CAACsB,eAAgB,OAAQZ,MAAO,WAA3D,+B,YCxEhDa,MARf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAW9B,OCI7B+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,iBCAR1C,EAAOkD,YAAe,CAC1BC,QAAQ,CACNC,QAAS,CACPC,KAAM,WAERC,UAAU,CACRD,KAAM,WAYZE,IAASC,OACP,cAACC,EAAA,EAAD,CAAezD,MAAOA,EAAtB,SACE,cAAC,EAAD,MAEF0D,SAASC,eAAe,SAM1BlB,M","file":"static/js/main.9361de82.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Container, Box, Typography, TextField, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './index.css'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    subheading:{\r\n        fontWeight: 500,\r\n        fontSize: 18,\r\n        marginTop: 50,\r\n        fontFamily: 'Montserrat, sans-serif'\r\n    },\r\n    button:{\r\n        textAlign: 'center'\r\n    },\r\n   text:{\r\n     marginBottom: 50,\r\n     fontFamily: 'Montserrat, sans-serif'\r\n\r\n   }\r\n\r\n\r\n}))\r\n\r\n\r\n\r\nconst Login = () => {\r\n    const classes= useStyles();\r\n  return (\r\n    <Container maxWidth=\"xs\" style={{marginTop:100}}>\r\n      <Box\r\n        p=\"24px\"\r\n        mt=\"50px\"\r\n        bgcolor=\"black\"\r\n        boxShadow=\"10\"\r\n        borderRadius=\"15px\"\r\n      >\r\n\r\n        \r\n        \r\n        <Typography align=\"center\" variant=\"body1\" color=\"secondary\" className={classes.subheading}>\r\n          Sign in to your account\r\n        </Typography>\r\n        <br/>\r\n        <Typography variant=\"caption\" color=\"secondary\">\r\n          Email\r\n        </Typography>\r\n        <br/>\r\n\r\n        <TextField\r\n          id=\"outlined-size-small\"\r\n          \r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          inputProps={{style:{ background: '#fff' }}}\r\n          \r\n\r\n        />\r\n        <Typography variant=\"caption\" color=\"secondary\">\r\n          Password\r\n        </Typography>\r\n        <TextField\r\n\r\n          id=\"outlined-size-small\"\r\n          \r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          inputProps={{style:{ background: '#fff' }}}\r\n        />\r\n        <br/>\r\n        <br/>\r\n        <Button variant=\"contained\" color=\"primary\" fullWidth disableElevation size=\"large\" className={classes.button}>\r\n          Login\r\n        </Button>\r\n        <br/>\r\n        <br/>\r\n        <br/>\r\n        \r\n        <Typography variant=\"body2\" color=\"secondary\" align=\"center\" className={classes.text}>\r\n          Don't have an account? <span style={{color: '#fff'}}><a href=\"/#/signup\" style={{textDecoration: 'none', color: '#116535'}}>Signup</a></span>\r\n        </Typography>\r\n\r\n\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { HashRouter, Route } from 'react-router-dom';\nimport Login from './containers/Login'\nimport './App.css';\nimport './index.css'\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Route exact path=\"/login\" component={Login}></Route>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core';\n\n\nconst theme= createMuiTheme({\n  palette:{\n    primary: {\n      main: '#116535'\n    },\n    secondary:{\n      main: '#fff'\n    }\n    \n},\n\n})\n\n\n\n\n\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}